{"version":3,"sources":["assets/logo.svg","components/screens/StartScreen.tsx","models/JsItemType.ts","components/Product.tsx","components/Counter.tsx","components/Blender.tsx","components/Pot.tsx","components/Basket.tsx","components/SpicesShelf.tsx","components/SaladBowl.tsx","components/Fridge.tsx","components/screens/MainActionsScreen.tsx","components/GameScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","StartScreen","_ref","gameStateSetter","React","createElement","className","src","logo","alt","onClick","GameState","GAME","JsItemType","Product","product","_ref$inFridge","inFridge","productClass","baseProductClasses","Counter","products","half","Math","ceil","length","topProducts","slice","bottomProducts","map","index","Blender","_ref$blenderOptions","blenderOptions","visible","full","shake","citrus","berry","blenderJarClass","Fragment","Array","from","_","i","key","style","top","concat","Pot","_ref$potOptions","potOptions","simmer","soup","pepper","salt","oregano","cucumber","tomato","carrot","soupHue","potClass","filter","Basket","_ref$basketOptions","basketOptions","type","count","CurrentBasketClass","SpicesShelf","SaladBowl","_ref$saladBowlOptions","saladBowlOptions","mixing","mixed","Fridge","third","firstShelf","secondShelf","thirdShelf","adjustShelvesPosition","useCallback","fridge","document","querySelector","firstShelfElements","querySelectorAll","secondShelfElements","thirdShelfElements","fridgeHeight","clientHeight","firstNewTopValue","secondNewTopValue","thirdNewTopValue","forEach","element","useEffect","handleResize","window","addEventListener","removeEventListener","left","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","this","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","delegateYield","MainActionsScreen","refillUrl","spiceUrl","tasteUrl","infoTextActionMap","SHOW_ON_COUNTER","PUT_IN_POT","SIMMER","ADD_TO_SALAD","MIX_SALAD","BLEND","ADD_TO_BLENDER","REMOVE_FROM_COUNTER","CUT_ON_COUNTER","infoTextItemMap","CITRUS_BASKET","BERRY_BASKET","ROT_TOMATO","FRESH_TOMATO","CUT_TOMATO","ROT_CUCUMBER","FRESH_CUCUMBER","CUT_CUCUMBER","ROT_CARROT","FRESH_CARROT","CUT_CARROT","BERRY","CITRUS","SALT","PEPPER","OREGANO","refillSuccMsg","refillErrMsg","cookingNoActionsMsg","cookingDoneMsg","cookingErrMsg","noSoupSpicingMsg","beforeSpicingMsg","afterSpicingMsg","spicingErrMsg","tasteGoodMsg","tasteBadMsg","tasteErrMsg","cookingDelay","initialBlenderOptions","initialPotOptions","spiced","initialSaladBowlOptions","initialBerryBasketOptions","initialCitrusBasketOptions","axios","get","_ref2","_asyncToGenerator","_callee","response","_context","console","log","data","setCurrentTask","SaladBowlVisSetter","_x","apply","arguments","error","infoTextSetter","_useState","useState","_useState2","_slicedToArray","counterProducts","counterProductsSetter","_useState3","_useState4","fridgeProducts","fridgeProductsSetter","_useState5","_useState6","infoText","_useState7","_useState8","spicesShelfVis","_useState9","_useState10","setBlenderOptions","_useState11","_useState12","setPotOptions","_useState13","_useState14","setSaladBowlOptions","_useState15","_useState16","berryBasketOptions","setBerryBasketOptions","_useState17","_useState18","citrusBasketOptions","setCitrusBasketOptions","_useState19","_useState20","buttonBlocker","setButtonBlocker","_useState21","_useState22","currentTask","prevOptions","_objectSpread","counterVisMap","BLENDER","POT","cuttedMap","removeFromCounter","item","prevState","findIndex","newState","_toConsumableArray","splice","actionMap","removeFromFridge","setTimeout","cuttedArg","cook","url","dishName","emptyListMsg","undefined","delay","ms","res","actions","_ref4","_callee3","_iterator","_step","action","_context3","JSON","stringify","_createForOfIteratorHelper","String","parameter","t0","_x3","finally","shouldShow","buttonName","START","items","_ref3","_callee2","receivedItems","_context2","_x2","refill","_ref5","_callee4","_iterator2","_step2","_context4","_x4","spice","_ref6","_callee5","isTasteGood","_context5","_x5","GameScreen","state","App","gameState","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","defaults","baseURL","process","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2934fd44.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.af49c77d.svg\";","import logo from \"../../assets/logo.svg\";\nimport {GameState} from \"../GameScreen\";\n\ntype StartScreenProps = {\n    gameStateSetter: (gs: GameState) => void\n}\n\nexport default function StartScreen({gameStateSetter}: StartScreenProps) {\n    return (\n        <div className=\"App-main-container\">\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n            <p className=\"App-big-name font-link-bold\">Culinary arts</p>\n            <p className=\"App-small-name font-link-base\">by Kotlin Course</p>\n            <div className=\"App-buttons-container App-display-flex\">\n                <button className=\"App-button-base App-button-start\" onClick={() => gameStateSetter(GameState.GAME)}></button>\n            </div>\n        </div>\n    );\n}\n","export enum JsItemType {\n    CITRUS_BASKET,\n    BERRY_BASKET,\n\n    ROT_TOMATO,\n    FRESH_TOMATO,\n    CUT_TOMATO,\n\n    ROT_CUCUMBER,\n    FRESH_CUCUMBER,\n    CUT_CUCUMBER,\n\n    ROT_CARROT,\n    FRESH_CARROT,\n    CUT_CARROT,\n\n    BERRY,\n    CITRUS,\n\n    SALT,\n    PEPPER,\n    OREGANO,\n}\n","import {JsItemType} from '../models/JsItemType'\n\n\ntype ProductProps = {\n    product: JsItemType,\n    inFridge?: boolean\n}\n\nexport default function Product({product, inFridge=false}: ProductProps) {\n    let baseProductClasses = \"App-product-image\"\n    let productClass = baseProductClasses + \"-\" + JsItemType[product]\n    return(\n        <div className={baseProductClasses + \" \" + productClass + \" \" + (inFridge? \"App-product-fridge\" : \"App-product-counter\")}></div>\n    )\n}\n","import Product from \"./Product\";\nimport {JsItemType} from \"../models/JsItemType\";\n\ntype CounterProps = {\n    products: Array<JsItemType>,\n}\n\nexport default function Counter({products}: CounterProps) {\n    function getProductByIndex(index: number): JsItemType {\n        if (products.length > index) {\n            return products[index]\n        }\n        return JsItemType.ROT_TOMATO\n    }\n\n    const half = Math.ceil(products.length / 2);\n    const topProducts = products.slice(0, half);\n    const bottomProducts = products.slice(half);\n\n    return(\n        <div className=\"App-counter-container\">\n            <div className=\"App-products-row App-products-row-top\">\n            {topProducts.map((product, index) => (\n                    <Product product={product} ></Product>\n            ))}\n            </div>\n            <div className=\"App-products-row App-products-row-bottom\">\n                {bottomProducts.map((product, index) => (\n                    <Product product={product} ></Product>\n                ))}\n            </div>\n        </div>\n    )\n}\n","type BlenderProps = {\n    blenderOptions: {\n        visible: boolean;\n        full: boolean;\n        shake: boolean;\n        citrus: number;\n        berry: number;\n    }\n}\n\nexport default function Blender({blenderOptions: {visible, full, shake, citrus, berry}}: BlenderProps) {\n    let baseBlenderJarClasses = \"App-blender-jar\"\n    let blenderJarClass = baseBlenderJarClasses + (full ? \"-full\" : \"\")\n    return (\n        <div className={\"App-blender\" + (visible ? \"\" : \" App-invisible\") + (shake ? \" App-animation-shake\" : \"\")}>\n            <div className={\"App-blender \" + blenderJarClass}\n            ></div>\n            {!full && (\n                <>\n                    {Array.from({length: citrus}).map((_, i) => (\n                        <div key={i} className={\"App-blender App-blender-citrus \"}\n                             style={{top: `${-1 * (citrus - i - 1)}vmin`}}\n                        ></div>\n                    ))}\n                    {Array.from({length: berry}).map((_, i) => (\n                        <div key={i} className={\"App-blender App-blender-berry \"}\n                             style={{top: `${-1 * (berry - i - 1)}vmin`}}\n                        ></div>\n                    ))}\n                </>\n            )}\n        </div>\n    )\n}\n","type PotProps = {\n    potOptions: {\n        visible: boolean,\n        simmer: boolean,\n        soup: boolean,\n        pepper: boolean,\n        salt: boolean,\n        oregano: boolean,\n        cucumber: number,\n        tomato: number,\n        carrot: number,\n        soupHue: number,\n        spiced: boolean\n    }\n}\n\nexport default function Pot({potOptions:{visible,simmer,soup,pepper,salt,oregano, cucumber, tomato,carrot,soupHue}}: PotProps) {\n    let basePotClasses = \"App-pot\"\n    let potClass = basePotClasses + (soup ? \"-soup\" : \"-water\")\n    return (\n        <div className={\"App-pot\" + (visible ? \"\" : \" App-invisible\") + (simmer ? \" App-animation-simmer\" : \"\")}>\n            <div className={\"App-pot App-pot-back\"}\n            ></div>\n\n            {!soup && (\n                <>\n                    {Array.from({length: cucumber}).map((_, i) => (\n                        <div key={i} className={\"App-pot App-pot-cucumber \"}\n                             style={{top: `${-1 * (cucumber - i - 1)}vmin`}}\n                        ></div>\n                    ))}\n                    {Array.from({length: tomato}).map((_, i) => (\n                        <div key={i} className={\"App-pot App-pot-tomato \"}\n                             style={{top: `${-1 * (tomato - i - 1)}vmin`}}\n                        ></div>\n                    ))}\n                    {Array.from({length: carrot}).map((_, i) => (\n                        <div key={i} className={\"App-pot App-pot-carrot \"}\n                             style={{top: `${-1 * (carrot - i - 1)}vmin`}}\n                        ></div>\n                    ))}\n                </>\n            )}\n            <div className={\"App-pot \" + potClass}\n                 style={{filter: `hue-rotate(${soupHue}deg)`}}\n            ></div>\n            <div className={\"App-pot App-pot-pepper \" + ((pepper) ? \"\" : \"App-invisible\")}\n            ></div>\n            <div className={\"App-pot App-pot-salt \" + ((salt) ? \"\" : \"App-invisible\")}\n            ></div>\n            <div className={\"App-pot App-pot-oregano \" + ((oregano) ? \"\" : \"App-invisible\")}\n            ></div>\n        </div>\n    )\n}\n","type BasketProps = {\n    basketOptions: {\n        type: string,\n        visible: boolean,\n        count: number,\n    }\n}\n\nexport default function Basket({basketOptions:{type, visible, count}}: BasketProps) {\n    let BasketClass = \"App-basket \"\n    let CurrentBasketClass = `App-basket-${type}-`\n    return(\n        <div className={BasketClass + (visible ? \"\" : \" App-invisible\")}>\n            <div className={\"App-basket App-basket-back\"}\n            ></div>\n            {count > 0 && (\n                <>\n                    {Array.from({length: count}).map((_, i) => (\n                        <div key={i} className={\"App-basket App-basket-item \" + CurrentBasketClass + (count - i)}\n                        ></div>\n                    ))}\n                </>\n            )}\n            <div className={\"App-basket App-basket-front\"}\n            ></div>\n        </div>\n    )\n}\n","type SpicesShelfProps = {\n    visible: boolean\n}\n\nexport default function SpicesShelf({visible}: SpicesShelfProps) {\n    let SpicesShelfClass = \"App-spices-shelf\"\n    return(\n        <div className={SpicesShelfClass + (visible ? \"\" : \" App-invisible\")}></div>\n    )\n}\n","import Product from \"./Product\";\n\ntype SaladBowlProps = {\n    saladBowlOptions: {\n        visible: boolean,\n        mixing: boolean,\n        mixed: boolean,\n        tomato: number,\n        cucumber: number,\n        carrot: number\n    }\n}\n\nexport default function SaladBowl({saladBowlOptions:{visible,mixing,mixed,tomato,cucumber,carrot}}: SaladBowlProps) {\n    return (\n        <div className={\"App-salad\" + (visible ? \"\" : \" App-invisible\") + (mixing ? \" App-animation-mixing\" : \"\")}>\n            {!mixed ? (\n                <>\n                    {Array.from({length: carrot}).map((_, i) => (\n                        <div key={i} className={\"App-salad App-salad-carrot \"}\n                             style={{top: `${-1 * (carrot - i - 1)}vmin`}}\n                        ></div>\n                    ))}\n                    {Array.from({length: tomato}).map((_, i) => (\n                        <div key={i} className={\"App-salad App-salad-tomato \"}\n                             style={{top: `${-1 * (tomato - i - 1)}vmin`}}\n                        ></div>\n                    ))}\n                    {Array.from({length: cucumber}).map((_, i) => (\n                        <div key={i} className={\"App-salad App-salad-cucumber \"}\n                             style={{top: `${-1 * (cucumber - i - 1)}vmin`}}\n                        ></div>\n                    ))}\n                </>) : (\n                <>\n                    <div className={\"App-salad App-salad-mixed-tomato \" + ((tomato > 0) ? \"\" : \"App-invisible\")}\n                    ></div>\n                    <div className={\"App-salad App-salad-mixed-cucumber \" + ((cucumber > 0) ? \"\" : \"App-invisible\")}\n                    ></div>\n                    <div className={\"App-salad App-salad-mixed-carrot \" + ((carrot > 0) ? \"\" : \"App-invisible\")}\n                    ></div>\n                </>\n            )}\n            <div className={\"App-salad App-salad-bowl \"}\n            ></div>\n        </div>\n    )\n}\n","import React, { useEffect, useCallback} from 'react';\nimport Product from \"./Product\";\nimport {JsItemType} from \"../models/JsItemType\";\n\ntype FridgeProps = {\n    products: Array<JsItemType>,\n}\n\nexport default function Fridge({products}: FridgeProps) {\n\n    const third = Math.ceil(products.length / 3);\n    const firstShelf = products.slice(0, third);\n    const secondShelf = products.slice(third, third * 2);\n    const thirdShelf = products.slice(third * 2);\n\n\n    const adjustShelvesPosition = useCallback(() => {\n        const fridge = document.querySelector('.App-fridge');\n        const firstShelfElements = document.querySelectorAll('.App-fridge-first-shelf');\n        const secondShelfElements = document.querySelectorAll('.App-fridge-second-shelf');\n        const thirdShelfElements = document.querySelectorAll('.App-fridge-third-shelf');\n        if (fridge) {\n            const fridgeHeight = fridge.clientHeight;\n            const firstNewTopValue = fridgeHeight * 0.15; // Adjust the multiplier as needed\n            const secondNewTopValue = fridgeHeight * 0.3; // Adjust the multiplier as needed\n            const thirdNewTopValue = fridgeHeight * 0.425; // Adjust the multiplier as needed\n            firstShelfElements.forEach(element => {\n                (element as HTMLElement).style.top = `${firstNewTopValue}px`;\n            });\n            secondShelfElements.forEach(element => {\n                (element as HTMLElement).style.top = `${secondNewTopValue}px`;\n            });\n            thirdShelfElements.forEach(element => {\n                (element as HTMLElement).style.top = `${thirdNewTopValue}px`;\n            });\n        }\n    }, [products]);\n\n    useEffect(() => {\n        adjustShelvesPosition();\n        const handleResize = () => {\n            adjustShelvesPosition();\n        };\n        window.addEventListener('resize', handleResize);\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [adjustShelvesPosition]);\n\n    return(\n        <div className={\"App-fridge\"}>\n            <div className={\"App-fridge App-fridge-back\"}\n            ></div>\n            {firstShelf.map((product, index) => (\n                <div style={{left: `${2 + 2 * (index)}vmin`}}\n                className={\"App-fridge-first-shelf\"}>\n                    <Product product={product} inFridge={true} ></Product>\n                </div>\n            ))}\n            {secondShelf.map((product, index) => (\n                <div style={{left: `${2 + 2 * (index)}vmin`}}\n                     className={\"App-fridge-second-shelf\"}>\n                    <Product product={product} inFridge={true} ></Product>\n                </div>\n            ))}\n            {thirdShelf.map((product, index) => (\n                <div style={{left: `${2 + 2 * (index)}vmin`}}\n                key={`third-shelf-${index}`}\n                className={\"App-fridge-third-shelf\"}>\n                    <Product product={product} inFridge={true} ></Product>\n                </div>\n            ))}\n        </div>\n    )\n}\n","import {GameState} from \"../GameScreen\";\nimport {useEffect, useState} from \"react\";\nimport {JsAction} from '../../models/JsAction'\nimport {JsItemType} from '../../models/JsItemType'\nimport axios from \"axios\";\nimport Counter from \"../Counter\";\nimport Blender from \"../Blender\";\nimport Pot from \"../Pot\";\nimport Basket from \"../Basket\";\nimport SpicesShelf from \"../SpicesShelf\";\nimport SaladBowl from \"../SaladBowl\";\nimport Fridge from \"../Fridge\";\n\ntype MainActionsScreenProps = {\n    gameStateSetter: (gs: GameState) => void\n}\n\nexport default function MainActionsScreen({gameStateSetter}: MainActionsScreenProps) {\n\n    const taskTypeUrl   = \"/functions/current-task\"\n    const refillUrl     = \"/functions/refill-fridge\"\n    const soupUrl       = \"/functions/tomato-soup\"\n    const spiceUrl      = \"/functions/soup-spices\"\n    const tasteUrl      = \"/functions/check-soup\"\n    const saladListUrl  = \"/functions/salad-list\"\n    const saladSequenceUrl    = \"/functions/salad-sequence\"\n    const smoothieUrl     = \"/functions/smoothie\"\n\n    let infoTextActionMap: { [key: string]: string } = {\n        \"SHOW_ON_COUNTER\": \"Placing the current ingredient on the cooking space:\",\n        \"PUT_IN_POT\": \"Putting into the pot:\",\n        \"SIMMER\": \"Cooking!\",\n        \"ADD_TO_SALAD\": \"Adding to the salad:\",\n        \"MIX_SALAD\": \"Mixing the salad.\",\n        \"BLEND\": \"Blending.\",\n        \"ADD_TO_BLENDER\": \"Adding to the blender:\",\n        \"REMOVE_FROM_COUNTER\": \"Removing the current ingredient from the cooking space:\",\n        \"CUT_ON_COUNTER\": \"Cutting\",\n    }\n\n    let infoTextItemMap: { [key: string]: string } = {\n        \"CITRUS_BASKET\": \"citrus basket\",\n        \"BERRY_BASKET\": \"berry basket\",\n        \"ROT_TOMATO\": \"rotten tomato\",\n        \"FRESH_TOMATO\": \"fresh tomato\",\n        \"CUT_TOMATO\": \"cut tomato\",\n        \"ROT_CUCUMBER\": \"rotten cucumber\",\n        \"FRESH_CUCUMBER\": \"fresh cucumber\",\n        \"CUT_CUCUMBER\": \"cut cucumber\",\n        \"ROT_CARROT\": \"rotten carrot\",\n        \"FRESH_CARROT\": \"fresh carrot\",\n        \"CUT_CARROT\": \"cut carrot\",\n        \"BERRY\": \"a berry\",\n        \"CITRUS\": \"an orange\",\n        \"SALT\": \"salt\",\n        \"PEPPER\": \"pepper\",\n        \"OREGANO\": \"oregano\",\n    }\n\n    const startupMsg = \"Press the button to start\"\n    const getTaskErrMsg = \"Can't retrieve task type. Please check the backend.\"\n\n    const refillSuccMsg = \"The fridge has been refilled!\"\n    const refillErrMsg = \"Failed to refill the fridge. Check your implementation.\"\n    const soupEmptyListMsg = \"You need at least three fresh tomatoes in the fridge! Please refill!\"\n\n    const cookingNoActionsMsg = \"Not enough ingredients to cook\"\n    const cookingDoneMsg = \"Cooking is complete!\"\n    const cookingErrMsg = \"Failed to cook. Check your implementation.\"\n\n    const noSoupSpicingMsg = \"You need to cook the soup first!\"\n    const beforeSpicingMsg = \"Let's add some spices!\"\n    const afterSpicingMsg = \"Spices have been added!\"\n    const spicingErrMsg = \"Failed to add spices. Check your implementation.\"\n\n    const tasteGoodMsg = \"It tastes great! 🎉\"\n    const tasteBadMsg = \"It tastes terrible... Please try cooking the soup again.\"\n    const tasteErrMsg = \"Failed to retrieve taste status. Check your implementation.\"\n\n    const saladEmptyListMsg = \"Please refill the fridge!\"\n\n    const soupName = \"tomato soup\"\n    const saladListName = \"salad (list)\"\n    const saladSequenceName = \"salad (sequence)\"\n    const smoothieName = \"smoothie\"\n\n    const cookingDelay = 1000 // ms\n\n    type BlenderOptions = {\n        visible: boolean,\n        full: boolean,\n        shake: boolean,\n        berry: number,\n        citrus: number,\n    }\n\n    const initialBlenderOptions: BlenderOptions = {\n        visible: true,\n        full: false,\n        shake: false,\n        berry: 0,\n        citrus: 0,\n    }\n\n    type PotOptions = {\n        visible: boolean,\n        simmer: boolean,\n        soup: boolean,\n        pepper: boolean,\n        salt: boolean,\n        oregano: boolean,\n        cucumber: number,\n        tomato: number,\n        carrot: number,\n        soupHue: number,\n        spiced: boolean\n    }\n\n    const initialPotOptions: PotOptions = {\n        visible: true,\n        simmer: false,\n        soup: false,\n        pepper: false,\n        salt: false,\n        oregano: false,\n        cucumber: 0,\n        tomato: 0,\n        carrot: 0,\n        soupHue: 0,\n        spiced: false\n    }\n\n    type SaladBowlOptions = {\n        visible: boolean,\n        mixing: boolean,\n        mixed: boolean,\n        tomato: number,\n        cucumber: number,\n        carrot: number,\n    }\n\n    const initialSaladBowlOptions: SaladBowlOptions = {\n        visible: false,\n        mixing: false,\n        mixed: false,\n        tomato: 0,\n        cucumber: 0,\n        carrot: 0,\n    }\n\n    type BasketOptions = {\n        type: string,\n        visible: boolean,\n        count: number,\n    }\n\n    const initialBerryBasketOptions: BasketOptions = {\n        type: \"berry\",\n        visible: false,\n        count: 5,\n    }\n\n    const initialCitrusBasketOptions: BasketOptions = {\n        type: \"citrus\",\n        visible: false,\n        count: 5,\n    }\n\n    useEffect(() => {\n        axios.get(taskTypeUrl).then(async (response) => {\n            console.log(`Current task type: ${response.data as String}`)\n            setCurrentTask(response.data as String)\n            SaladBowlVisSetter((response.data as String)===\"SALAD\")\n        }).catch(error => {\n            infoTextSetter(getTaskErrMsg)\n        })\n    }, [])\n\n    let [counterProducts, counterProductsSetter] = useState<Array<JsItemType>>([])\n    let [fridgeProducts, fridgeProductsSetter] = useState<Array<JsItemType>>([])\n    let [infoText, infoTextSetter] = useState<String>(startupMsg)\n    let [spicesShelfVis, spicesShelfVisSetter] = useState<boolean>(true)\n    let [blenderOptions, setBlenderOptions] = useState<BlenderOptions>(initialBlenderOptions);\n    let [potOptions, setPotOptions] = useState<PotOptions>(initialPotOptions);\n    let [saladBowlOptions, setSaladBowlOptions] = useState<SaladBowlOptions>(initialSaladBowlOptions);\n    let [berryBasketOptions, setBerryBasketOptions] = useState<BasketOptions>(initialBerryBasketOptions);\n    let [citrusBasketOptions, setCitrusBasketOptions] = useState<BasketOptions>(initialCitrusBasketOptions);\n    let [buttonBlocker, setButtonBlocker] = useState<String>(\"\");\n    let [currentTask, setCurrentTask] = useState<String>(\"\");\n\n    function berryBasketVisSetter(value: boolean){\n        setBerryBasketOptions(prevOptions => ({\n                ...prevOptions,\n                visible: value\n            }))\n    }\n\n    function citrusBasketVisSetter(value: boolean){\n        setCitrusBasketOptions(prevOptions => ({\n            ...prevOptions,\n            visible: value\n        }))\n    }\n\n    function blenderVisSetter(value: boolean) {\n        setBlenderOptions(prevOptions => ({\n            ...prevOptions,\n            visible: value\n        }));\n    }\n\n    function potVisSetter(value: boolean) {\n        setPotOptions(prevOptions => ({\n            ...prevOptions,\n            visible: value\n        }));\n    }\n\n    function SaladBowlVisSetter(value: boolean) {\n        setSaladBowlOptions(prevOptions => ({\n            ...prevOptions,\n            visible: value\n        }));\n    }\n\n    let counterVisMap: { [key: string]: (arg: boolean) => void } = {\n        \"BERRY_BASKET\": berryBasketVisSetter,\n        \"CITRUS_BASKET\": citrusBasketVisSetter,\n        \"BLENDER\": blenderVisSetter,\n        \"POT\": potVisSetter\n    }\n\n    function showOnCounter(arg: string | null) {\n        console.log(\"showOnCounter\", arg)\n        if (!arg) {\n            return\n        }\n        if (arg in counterVisMap) {\n            counterVisMap[arg](true)\n        } else {\n            removeFromFridge(arg)\n            counterProductsSetter((prevState) => [\n                ...prevState,\n                JsItemType[arg as keyof typeof JsItemType],\n            ]);\n        }\n    }\n\n    function putInPot(arg: string | null) {\n        if (arg == null)\n            return\n        removeFromCounter(arg)\n        let potMap: { [key: string]: () => void } = {\n            \"PEPPER\": () => {\n                setPotOptions(prevOptions => ({\n                    ...prevOptions,\n                    pepper: true,\n                    soupHue: 57,  // Dark green\n                }));\n                setTimeout(() => {\n                    setPotOptions(prevOptions => ({\n                        ...prevOptions,\n                        pepper: false\n                    }));\n                }, 750);\n            },\n            \"SALT\": () => {\n                setPotOptions(prevOptions => ({\n                    ...prevOptions,\n                    salt: true,\n                    soupHue: 320,  // Pink\n                }));\n                setTimeout(() => {\n                    setPotOptions(prevOptions => ({\n                        ...prevOptions,\n                        salt: false\n                    }));\n                }, 750);\n            },\n            \"OREGANO\": () => {\n                setPotOptions(prevOptions => ({\n                    ...prevOptions,\n                    oregano: true,\n                    soupHue: 113,  // Green\n                }));\n                setTimeout(() => {\n                    setPotOptions(prevOptions => ({\n                        ...prevOptions,\n                        oregano: false\n                    }));\n                }, 750);\n            },\n            \"CUT_TOMATO\": () => {\n                setPotOptions(prevOptions => ({\n                    ...prevOptions,\n                    tomato: prevOptions.tomato+1\n                }));\n            },\n            \"CUT_CARROT\": () => {\n                setPotOptions(prevOptions => ({\n                    ...prevOptions,\n                    carrot: prevOptions.carrot+1\n                }));\n            },\n            \"CUT_CUCUMBER\": () => {\n                setPotOptions(prevOptions => ({\n                    ...prevOptions,\n                    cucumber: prevOptions.cucumber+1\n                }));\n            },\n        }\n        potMap[arg]()\n    }\n\n    function simmer(arg: string | null) {\n        setPotOptions(prevOptions => ({\n            ...prevOptions,\n            simmer: true\n        }));\n        setTimeout(() => {\n            setPotOptions(prevOptions => ({\n                ...prevOptions,\n                soup: true,\n                soupHue: 0,\n            }));\n        }, 500);\n        setTimeout(() => {\n            setPotOptions(prevOptions => ({\n                ...prevOptions,\n                simmer: false\n            }));\n        }, 1000);\n    }\n\n    function addToSalad(arg: string | null) {\n        console.log(\"addToSalad()\")\n        console.log(arg)\n        if (arg == null)\n            return\n        removeFromCounter(arg)\n        let saladMap: { [key: string]: () => void } = {\n            \"CUT_TOMATO\": () => {\n                setSaladBowlOptions(prevOptions => ({\n                    ...prevOptions,\n                    tomato: prevOptions.tomato+1\n                }));\n            },\n            \"CUT_CUCUMBER\": () => {\n                setSaladBowlOptions(prevOptions => ({\n                    ...prevOptions,\n                    cucumber: prevOptions.cucumber+1\n                }));\n            },\n            \"CUT_CARROT\": () => {\n                setSaladBowlOptions(prevOptions => ({\n                    ...prevOptions,\n                    carrot: prevOptions.carrot+1\n                }));\n            },\n        }\n        saladMap[arg]()\n    }\n\n    function mixSalad(arg: string | null) {\n        setSaladBowlOptions(prevOptions => ({\n            ...prevOptions,\n            mixing: true\n        }));\n        setTimeout(() => {\n            setSaladBowlOptions(prevOptions => ({\n                ...prevOptions,\n                mixed: true\n            }));\n        }, 500);\n        setTimeout(() => {\n            setSaladBowlOptions(prevOptions => ({\n                ...prevOptions,\n                mixing: false\n            }));\n        }, 1000);\n    }\n\n    function blend(arg: string | null) {\n        setBlenderOptions(prevOptions => ({\n            ...prevOptions,\n            shake: true\n        }));\n        setTimeout(() => {\n            setBlenderOptions(prevOptions => ({\n                ...prevOptions,\n                full: true\n            }));\n        }, 500);\n        setTimeout(() => {\n            setBlenderOptions(prevOptions => ({\n                ...prevOptions,\n                shake: false\n            }));\n        }, 1000);\n    }\n\n    function addToBlender(arg: string | null) {\n        if (arg == null)\n            return\n        removeFromCounter(arg)\n        let blenderMap: { [key: string]: () => void } = {\n            \"CITRUS\": () => {\n                setCitrusBasketOptions(prevOptions => ({\n                    ...prevOptions,\n                    count: (prevOptions.count > 0) ? prevOptions.count-1 : 0\n                    })\n                )\n                setBlenderOptions(prevOptions => ({\n                    ...prevOptions,\n                    citrus: prevOptions.citrus+1\n                }));\n            },\n            \"BERRY\": () => {\n                setBerryBasketOptions(prevOptions => ({\n                        ...prevOptions,\n                        count: (prevOptions.count > 0) ? prevOptions.count-1 : 0\n                    })\n                )\n                setBlenderOptions(prevOptions => ({\n                    ...prevOptions,\n                    berry: prevOptions.berry+1\n                }));\n            },\n        }\n        blenderMap[arg]()\n    }\n\n    let cuttedMap: { [key: string]: string } = {\n        \"FRESH_TOMATO\": \"CUT_TOMATO\",\n        \"FRESH_CUCUMBER\": \"CUT_CUCUMBER\",\n        \"FRESH_CARROT\": \"CUT_CARROT\",\n    }\n\n    function cutOnCounter(arg: string | null){\n        console.log(\"cutOnCounter\", arg)\n        if (!arg){\n            return\n        }\n        console.log(\"counter: \", counterProducts)\n        if (cuttedMap.hasOwnProperty(arg)) {\n            let cuttedArg = cuttedMap[arg];\n            console.log(\"counter: \", counterProducts)\n            console.log(\"filter: \", counterProducts.filter(item => JsItemType[item] !== arg))\n            counterProductsSetter((prevState) => {\n                const index = prevState.findIndex(item => JsItemType[item] === arg);\n                if (index > -1) {\n                    const newState = [...prevState];\n                    newState.splice(index, 1, JsItemType[cuttedArg as keyof typeof JsItemType]);\n                    return newState;\n                }\n                return prevState;\n            });\n        }\n    }\n    \n    function removeFromCounter(arg: string | null) {\n        console.log(\"removeFromCounter\", arg)\n        if (!arg){\n            return\n        }\n        else {\n            console.log(\"counter: \", counterProducts)\n            console.log(\"filter: \", counterProducts.filter(item => JsItemType[item] !== arg))\n            counterProductsSetter((prevState) => {\n                const index = prevState.findIndex(item => JsItemType[item] === arg);\n                if (index > -1) {\n                    const newState = [...prevState];\n                    newState.splice(index, 1);\n                    return newState;\n                }\n                return prevState;\n            });\n        }\n    }\n\n    function removeFromFridge(arg: string | null) {\n        console.log(\"removeFromFridge\", arg)\n        if (!arg)\n            return\n        console.log(\"counter: \", fridgeProducts)\n        console.log(\"filter: \", fridgeProducts.filter(item => JsItemType[item] !== arg))\n        fridgeProductsSetter((prevState) => {\n            const index = prevState.findIndex(item => JsItemType[item] === arg);\n            if (index > -1) {\n                const newState = [...prevState];\n                newState.splice(index, 1);\n                return newState;\n            }\n            return prevState;\n        });\n    }\n\n\n    let actionMap: { [key: string]: (arg: string | null) => void } = {\n        \"SHOW_ON_COUNTER\": showOnCounter,\n        \"PUT_IN_POT\": putInPot,\n        \"SIMMER\": simmer,\n        \"ADD_TO_SALAD\": addToSalad,\n        \"MIX_SALAD\": mixSalad,\n        \"BLEND\": blend,\n        \"ADD_TO_BLENDER\": addToBlender,\n        \"REMOVE_FROM_COUNTER\": removeFromCounter,\n        \"CUT_ON_COUNTER\": cutOnCounter\n    };\n\n    function refill(){\n        setBlenderOptions(initialBlenderOptions);\n        setPotOptions(initialPotOptions);\n        setSaladBowlOptions(initialSaladBowlOptions)\n        SaladBowlVisSetter(currentTask===\"SALAD\")\n        setCitrusBasketOptions(initialCitrusBasketOptions)\n        setBerryBasketOptions(initialBerryBasketOptions)\n        counterProductsSetter([])\n        let items = Array<JsItemType>()\n        axios.get(refillUrl).then(async (response) => {\n            const receivedItems: Array<keyof typeof JsItemType> = response.data;\n            items = receivedItems.map(item => JsItemType[item]);\n            console.log(\"Refill GOT: \" + items)\n            fridgeProductsSetter(items)\n            infoTextSetter(refillSuccMsg)\n        }).catch(error => {\n            infoTextSetter(refillErrMsg);\n        })\n    }\n\n\n    function cook(url: string, dishName: string, emptyListMsg: string = \"\"){\n        setBlenderOptions(initialBlenderOptions);\n        setPotOptions(initialPotOptions);\n        setSaladBowlOptions(initialSaladBowlOptions)\n        SaladBowlVisSetter(currentTask===\"SALAD\")\n        setCitrusBasketOptions(initialCitrusBasketOptions)\n        setBerryBasketOptions(initialBerryBasketOptions)\n        counterProductsSetter([])\n        setButtonBlocker(dishName)\n\n        const delay = (ms: number) => new Promise(res => setTimeout(res, ms));\n\n        let actions = Array<JsAction>()\n        axios.get(url).then(async (response) => {\n            console.log(\"GOT: \" + JSON.stringify(response.data, null, 2))\n            actions = response.data as Array<JsAction>\n            if (actions.length == 0){\n                infoTextSetter(`${cookingNoActionsMsg} ${dishName}! ${emptyListMsg}`)\n                setButtonBlocker(\"\")\n                return\n            }\n            infoTextSetter(\"Let's go!\")\n            await delay(cookingDelay);\n            for (const action of actions) {\n                console.log(infoTextActionMap[String(action.type)] + \" \" + (action.parameter ? infoTextItemMap[String(action.parameter)] : \"\"))\n                infoTextSetter(infoTextActionMap[String(action.type)] + \" \" + (action.parameter ? infoTextItemMap[String(action.parameter)] : \"\"))\n                actionMap[String(action.type)](\n                    action.parameter ? String(action.parameter) : null\n                )\n                await delay(cookingDelay);\n            }\n            infoTextSetter(cookingDoneMsg)\n        }).catch(error => {\n            infoTextSetter(cookingErrMsg)\n        }).finally(() => {\n            setButtonBlocker(\"\")\n        })\n    }\n\n    function spice() {\n        setButtonBlocker(\"spice\")\n        const delay = (ms: number) => new Promise(res => setTimeout(res, ms));\n\n        let actions = Array<JsAction>()\n        axios.get(spiceUrl).then(async (response) => {\n            actions = response.data as Array<JsAction>\n            console.log(\"GOT: \" + actions)\n            if (actions.length == 0){\n                infoTextSetter(noSoupSpicingMsg)\n                setButtonBlocker(\"\")\n                return\n            }\n            infoTextSetter(beforeSpicingMsg)\n            await delay(cookingDelay);\n            for (const action of actions) {\n                console.log(infoTextActionMap[String(action.type)] + \" \" + (action.parameter ? infoTextItemMap[String(action.parameter)] : \"\"))\n                infoTextSetter(infoTextActionMap[String(action.type)] + \" \" + (action.parameter ? infoTextItemMap[String(action.parameter)] : \"\"))\n                actionMap[String(action.type)](\n                    action.parameter ? String(action.parameter) : null\n                )\n                await delay(cookingDelay);\n            }\n            infoTextSetter(afterSpicingMsg)\n            setPotOptions(prevOptions => ({\n                ...prevOptions,\n                spiced: true\n            }));\n        }).catch(error => {\n            infoTextSetter(spicingErrMsg)\n        }).finally(() => {\n            setButtonBlocker(\"\")\n        })\n    }\n\n    function taste() {\n        axios.get(tasteUrl).then(async (response) => {\n            let isTasteGood = response.data as boolean\n            console.log(\"isTasteGood: \" + isTasteGood)\n            if(isTasteGood){\n                infoTextSetter(tasteGoodMsg)\n            } else {\n                infoTextSetter(tasteBadMsg)\n            }\n        }).catch(error => {\n            infoTextSetter(tasteErrMsg)\n        })\n    }\n\n    function shouldShow(buttonName: string){\n        return !buttonBlocker;\n    }\n\n    return (\n        <div className=\"App-main-container\">\n            <div className=\"App-buttons-container\">\n                <button className=\"App-button-base App-game-button-bottom-base App-button-back\" onClick={() => {\n                    gameStateSetter(GameState.START)\n                }\n                }></button>\n            </div>\n            {\n                <div className={\"App-kitchen-space\"}>\n                    <div className=\"App-info-container\">\n                        <div className=\"App-info-container-text font-link-base\">{infoText}</div>\n                    </div>\n                    <div className={\"App-kitchen-container\"}>\n                        <div className={\"App-left-kitchen-container\"}>\n                            <SpicesShelf visible={spicesShelfVis}></SpicesShelf>\n                            <Fridge products={fridgeProducts}></Fridge>\n                        </div>\n                        <div className={\"App-center-kitchen-container\"}>\n                            <div className={\"App-basket-kitchen-container\"}>\n                                <Basket basketOptions={berryBasketOptions}></Basket>\n                                <SaladBowl saladBowlOptions={saladBowlOptions}></SaladBowl>\n                                <Basket basketOptions={citrusBasketOptions}></Basket>\n                            </div>\n                            <Counter products={counterProducts}></Counter>\n                        </div>\n                        <div className={\"App-right-kitchen-container\"}>\n                            <Blender blenderOptions={blenderOptions}></Blender>\n                            <Pot potOptions={potOptions}></Pot>\n                        </div>\n                    </div>\n                </div>\n            }\n            <div className=\"App-buttons-container\">\n                {(currentTask === \"SOUP\" || currentTask === \"SALAD\") && (\n                    <button\n                        className={\"App-button-base App-button-action \" + (shouldShow(\"refill\") ? \"\" : \"App-button-disable\")}\n                        onClick={() => refill()}>Refill\n                    </button>\n                )}\n                {currentTask === \"SOUP\" && (\n                    <>\n                        <button\n                            className={\"App-button-base App-button-action \" + (fridgeProducts.length > 0 && shouldShow(soupName) ? \"\" : \"App-button-disable\")}\n                            onClick={() => cook(soupUrl, soupName, soupEmptyListMsg)}>Soup\n                        </button>\n                        <button\n                            className={\"App-button-base App-button-action \" + (potOptions.soup && !potOptions.spiced && shouldShow(\"spice\") ? \"\" : \"App-button-disable\")}\n                            onClick={() => spice()}>Spice\n                        </button>\n                        <button\n                            className={\"App-button-base App-button-action \" + (potOptions.soup && potOptions.spiced && shouldShow(\"taste\") ? \"\" : \"App-button-disable\")}\n                            onClick={() => taste()}>Taste\n                        </button>\n                    </>\n                )}\n                {currentTask === \"SALAD\" && (\n                    <>\n                        <button\n                            className={\"App-button-base App-button-action-wide \" + (fridgeProducts.length > 0 && shouldShow(saladListName) ? \"\" : \"App-button-disable\")}\n                            onClick={() => cook(saladListUrl, saladListName, saladEmptyListMsg)}>Salad list\n                        </button>\n                        <button\n                            className={\"App-button-base App-button-action-wide \" + (fridgeProducts.length > 0 && shouldShow(saladSequenceName) ? \"\" : \"App-button-disable\")}\n                            onClick={() => cook(saladSequenceUrl, saladSequenceName, saladEmptyListMsg)}>Salad seq.\n                        </button>\n                    </>\n                )}\n                {currentTask === \"SMOOTHIE\" && (\n                    <button\n                        className={\"App-button-base App-button-action-wide \" + (shouldShow(smoothieName) ? \"\" : \"App-button-disable\")}\n                        onClick={() => cook(smoothieUrl, smoothieName)}>Smoothie\n                    </button>\n                )}\n            </div>\n        </div>\n    );\n}\n","import StartScreen from \"./screens/StartScreen\";\nimport React from \"react\";\nimport MainActionsScreen from \"./screens/MainActionsScreen\";\nwindow.React = React\n\nexport enum GameState {\n    START,\n    GAME,\n}\n\nexport type GameScreenProps = {\n    state: GameState,\n    gameStateSetter: (gs: GameState) => void,\n}\n\nexport default function GameScreen({state, gameStateSetter}: GameScreenProps) {\n    switch (state) {\n        case GameState.START: {\n            return <StartScreen gameStateSetter={gameStateSetter}/>\n        }\n        case GameState.GAME: {\n            return <MainActionsScreen gameStateSetter={gameStateSetter}/>\n        }\n    }\n}\n","import './App.css';\n// import './util/util'\nimport {useState} from \"react\";\nimport GameScreen, {GameState} from \"./components/GameScreen\";\n\nfunction App() {\n    let [gameState, gameStateSetter] = useState(GameState.START)\n\n    switch (gameState) {\n        case GameState.START: {\n            return (<div className=\"App\">\n                <header className=\"App-header-base App-header-black\">\n                    <GameScreen state={gameState}\n                                gameStateSetter={gameStateSetter}\n                    />\n                </header>\n            </div>);\n        }\n        default: {\n            return (<div className=\"App\">\n                <header className=\"App-header-base App-header-white\">\n                    <GameScreen state={gameState}\n                                gameStateSetter={gameStateSetter}\n                    />\n                </header>\n            </div>);\n        }\n    }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport axios from \"axios\";\n\n// from .env.development or .env.production\naxios.defaults.baseURL = process.env.REACT_APP_API_URL\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}